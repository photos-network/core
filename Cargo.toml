# define keys that can be inherited by members of the workspace
[workspace.package]
authors = ["Photos network developers <info@photos.network>"]
description = "A privacy first **photo storage and sharing service** in the fediverse."
version = "0.6.0"
homepage = "https://photos.network/"
documentation = "https://developers.photos.network/"
repository = "https://github.com/photos-network/core"
readme = "README.md"
license = "AGPL-3.0"
edition = "2021"

[package]
name = "core"
version.workspace = true
edition.workspace = true
description.workspace = true
license.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
include = ["src/**/*", "LICENSE.md", "README.md", "CHANGELOG.md"]


[workspace]
members = [
    "crates/accounts",
    "crates/activity_pub",
    "crates/common",
    "crates/database",
    "crates/media",
    "crates/oauth_authentication",
    "crates/oauth_authorization_server",
    "crates/plugin_interface"
]

# define dependencies to be inherited by members of the workspace
[workspace.dependencies]
# local crates
accounts = { path = "./crates/accounts" }
activity_pub = { path = "./crates/activity_pub" }
common = { path = "./crates/common" }
database = { path = "./crates/database" }
media = { path = "./crates/media" }
oauth_authentication = { path = "./crates/oauth_authentication" }
oauth_authorization_server = { path = "./crates/oauth_authorization_server" }

# 3rd party dependencies
abi_stable = "0.11.1"
activitypub_federation = "0.4.6"
async-trait = "0.1.73"
axum = { version = "0.6.20", features = ["ws", "headers"] }
axum-test = "13.0.1"
anyhow = "1.0.72"

bytes = "1.4.0"

core_extensions = { version = "1.5.2", default_features = false, features = ["std"] }
chrono = { version = "0.4.26", features = ["serde"] }

futures = "0.3.25"
futures-channel = "0.3.25"
futures-util = "0.3.25"

http = "0.2.9"
hyper = { version = "0.14.27", features = ["full"] }

log = "0.4.19"
mime =  "0.3"
mockall = "0.11.4"

openidconnect = { version = "3.2.0", features = ["accept-rfc3339-timestamps", "accept-string-booleans"] }

pretty_assertions = "1.3.0"

rand = "0.8.5"
rstest = "0.18.2"
rumqttc = "0.23.0"
rsa = "0.9.2"
reqwest = { version = "0.11", default-features = false, features = ["blocking", "json", "stream", "multipart"] }

serde = "1.0.183"
serde_qs = "0.12.0"
serde_json = { version = "1.0.104", features = ["raw_value"] }
serde_with = "3.3.0"
serde_urlencoded = "0.7.1"
smallvec = "1.8.0"
sqlx = "0.7.1"

testdir = "0.8.0"
tempfile = "3.8.0"
thiserror = "1.0.40"
time = "0.3.27"
tokio = { version = "1.30.0", features = ["full"] }
tokio-stream = { version = "0.1.11", features = ["net"] }
tokio-util = { version = "0.7.4", features = ["rt"] }
tower = { version = "0.4.13", features = ["util"] }
tower-http = { version = "0.4.3", features = ["fs", "tracing", "trace", "cors"] }
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = ["registry", "fmt", "std", "json"] }
tracing-appender = "0.2.2"

url = { version = "2.4.0", features = ["serde"] }
uuid = { version = "1.4.1", features = ["serde", "v4"] }

[dependencies.photos_network_plugin]
version = "0.2.0"
path = "./crates/plugin_interface"



[dependencies]
# local crates
accounts.workspace = true
activity_pub.workspace = true
common.workspace = true
database.workspace = true
media.workspace = true
oauth_authentication.workspace = true
oauth_authorization_server.workspace = true


# Plugin
abi_stable.workspace = true
core_extensions.workspace = true

# de/serialization
serde.workspace = true
serde_json.workspace = true

# error handling
anyhow.workspace = true

# http
axum.workspace = true
tokio.workspace = true
tower-http.workspace = true
tokio-stream.workspace = true
tokio-util.workspace = true

# logging
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-appender.workspace = true

# database
sqlx.workspace = true


[dev-dependencies]
pretty_assertions.workspace = true
serde_urlencoded.workspace = true
reqwest.workspace = true
